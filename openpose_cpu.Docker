FROM ubuntu:18.04
MAINTAINER Paul Morris (pmorris2012@fau.edu)

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
    apt-get install -y --no-install-recommends apt-utils && \
    apt-get install -y --no-install-recommends \
    build-essential wget apt-utils lsb-core cmake git \
    git g++ make libprotobuf-dev protobuf-compiler \
    libopencv-dev libgoogle-glog-dev libboost-all-dev libhdf5-serial-dev \ 
    libatlas-base-dev libleveldb-dev libsnappy-dev liblmdb-dev libgflags-dev \
    python3-dev python3-pip python3-setuptools \
    python-setuptools python-dev python-pip
#    opencl-headers ocl-icd-opencl-dev libviennacl-dev

#RUN easy_install pip
RUN pip install numpy protobuf opencv-python
RUN pip3 install numpy protobuf opencv-python

WORKDIR /openpose
RUN git clone https://github.com/CMU-Perceptual-Computing-Lab/openpose.git .

WORKDIR /openpose/build
RUN cmake -DGPU_MODE="CPU_ONLY" \
          -DUSE_CUDNN=OFF \
          -DCMAKE_BUILD_TYPE="Release" \
          -DBUILD_CAFFE=ON \
          -DDOWNLOAD_BODY_MPI_MODEL=ON \
          -DDOWNLOAD_BODY_COCO_MODEL=ON \
          -DDOWNLOAD_FACE_MODEL=ON \
          -DDOWNLOAD_HAND_MODEL=ON \
          -DBUILD_PYTHON=ON \
          -DUSE_MKL=OFF \
          .. && \
          make all -j"$(nproc)"


#commmands for PIMS

#add universe repository
#RUN apt-get update
#RUN apt-get install software-properties-common
#RUN add-apt-repository universe

#dependencies

RUN pip3 install slicerator
RUN pip3 install imageio
RUN pip3 install scikit-image

RUN apt-get install -y python-dev pkg-config
RUN apt-get install -y \
    libavformat-dev libavcodec-dev libavdevice-dev \
    libavutil-dev libswscale-dev libswresample-dev libavfilter-dev

RUN pip3 install --upgrade av

#install PIMS
RUN pip3 install https://github.com/soft-matter/pims/archive/master.zip

#commands to configure openpose

#move the pyopenpose python library into the python3 package folder so it can be imported.
RUN cp /openpose/build/python/openpose/pyopenpose.cpython-36m-x86_64-linux-gnu.so /usr/local/lib/python3.6/dist-packages/

#download default openpose model weights
#RUN chmod +x /openpose/models/getModels.sh
#RUN /openpose/models/getModels.sh

#make the directory where external files will be mounted
WORKDIR /external

RUN pip3 install jupyter

# Add Tini. Tini operates as a process subreaper for jupyter. This prevents
# kernel crashes.
ENV TINI_VERSION v0.6.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini
RUN chmod +x /usr/bin/tini
ENTRYPOINT ["/usr/bin/tini", "--"]

EXPOSE 8888
CMD ["jupyter", "notebook", "--port=8888", "--no-browser", "--ip=0.0.0.0", "--allow-root", "--NotebookApp.token=''", "--NotebookApp.password=''"]
